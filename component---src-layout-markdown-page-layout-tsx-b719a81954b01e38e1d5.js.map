{"version":3,"sources":["webpack:///./src/components/breadCrumb.module.scss","webpack:///./src/utils/create-breadcrumb-data.ts","webpack:///./src/layout/MarkdownPageLayout.tsx","webpack:///./src/layout/markdown-page-layout.module.scss","webpack:///./src/components/BreadCrumb.tsx"],"names":["module","exports","getParentPath","crumb","path","locale","pathStringArray","split","filter","element","crumbIndex","indexOf","slice","join","MarkdownPageLayout","markdownRemark","data","frontmatter","title","date","html","startsWith","breadCrumbData","map","label","linkTo","createBreadcrumbData","App","className","styles","page","BreadCrumb","dangerouslySetInnerHTML","__html","pageQuery","breadCrumb","to"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,WAAa,yC,qMCD/B,SAASC,EAAcC,EAAeC,EAAcC,GAClD,IAAMC,EAAkBF,EACrBG,MAAM,KACNC,OAAO,SAACC,GAAD,OAAaA,IAAYJ,IAC7BK,EAAaJ,EAAgBK,QAAQR,GAE3C,OAAOG,EAAgBM,MAAM,EAAGF,EAAa,GAAGG,KAAK,K,gBCExC,SAASC,EAAT,GAAyC,IAC/CC,EAD+C,EAAZC,KACnCD,eAD+C,EAKlDA,EAFFE,YAAcb,EAHsC,EAGtCA,KAAMc,EAHgC,EAGhCA,MAAOC,EAHyB,EAGzBA,KAC3BC,EACEL,EADFK,KAEIf,EAASD,EAAKiB,WAAW,QAAU,KAAO,KAC1CC,EDCD,SAA8BlB,EAAcC,GAWjD,OAVoBD,EACjBG,MAAM,KACNC,OAAO,SAACC,GAAD,MAAyB,KAAZA,GAAkBA,IAAYJ,IAClDO,MAAM,GAAI,GAEsBW,IAAI,SAACpB,GAAD,MAAY,CACjDqB,MAAOrB,EACPsB,OAAQvB,EAAcC,EAAOC,EAAMC,MCTdqB,CAAqBtB,EAAMC,GAElD,OACE,kBAACsB,EAAA,EAAD,CAAWtB,OAAQA,EAAQD,KAAMA,GAC/B,yBAAKwB,UAAWC,IAAOC,MACrB,yBAAKF,UAAU,aACb,kBAACG,EAAA,EAAD,CAAYP,MAAO,OAAQC,OAAQ,MAClCrB,GACCkB,EAAeC,IAAI,SAACpB,GAAD,OACjB,kBAAC4B,EAAA,EAAD,CAAYP,MAAOrB,EAAMqB,MAAOC,OAAQtB,EAAMsB,WAEjDP,GAAS,4BAAKA,GACdC,GAAQ,4BAAKA,GACd,yBACES,UAAU,oBACVI,wBAAyB,CAACC,OAAQb,QAQvC,IAAMc,EAAY,c,qBCrCzBlC,EAAOC,QAAU,CAAC,KAAO,6C,kCCDzB,0FASa8B,EAAyC,SAAC,GAAD,IAAEP,EAAF,EAAEA,MAAOC,EAAT,EAASA,OAAT,OACpD,0BAAMG,UAAWC,IAAOM,YACtB,kBAAC,IAAD,CAAeC,GAAIX,GAASD,GAC3B","file":"component---src-layout-markdown-page-layout-tsx-b719a81954b01e38e1d5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadCrumb\":\"breadCrumb-module--breadCrumb--2rTkB\"};","function getParentPath(crumb: string, path: string, locale: string): string {\n  const pathStringArray = path\n    .split('/')\n    .filter((element) => element !== locale);\n  const crumbIndex = pathStringArray.indexOf(crumb);\n\n  return pathStringArray.slice(0, crumbIndex + 1).join('/');\n}\n\nexport interface BreadCrumb {\n  readonly label: string;\n  readonly linkTo: string;\n}\n\nexport type BreadCrumbData = BreadCrumb[];\n\nexport function createBreadcrumbData(path: string, locale: string) {\n  const breadCrumbs = path\n    .split('/')\n    .filter((element) => element !== '' && element !== locale)\n    .slice(0, -1);\n\n  const breadCrumbData = breadCrumbs.map((crumb) => ({\n    label: crumb,\n    linkTo: getParentPath(crumb, path, locale),\n  }));\n\n  return breadCrumbData;\n}\n","import React from 'react';\nimport {graphql} from 'gatsby';\nimport AppLayout from './App';\n\nimport styles from './markdown-page-layout.module.scss';\nimport {createBreadcrumbData} from '../utils/create-breadcrumb-data';\nimport {BreadCrumb} from '../components/BreadCrumb';\n\nexport default function MarkdownPageLayout({data}: any) {\n  const {markdownRemark} = data;\n  const {\n    frontmatter: {path, title, date},\n    html,\n  } = markdownRemark;\n  const locale = path.startsWith('/en/') ? 'en' : 'de';\n  const breadCrumbData = createBreadcrumbData(path, locale);\n\n  return (\n    <AppLayout locale={locale} path={path}>\n      <div className={styles.page}>\n        <div className=\"blog-post\">\n          <BreadCrumb label={'Home'} linkTo={'/'} />\n          {path &&\n            breadCrumbData.map((crumb) => (\n              <BreadCrumb label={crumb.label} linkTo={crumb.linkTo} />\n            ))}\n          {title && <h1>{title}</h1>}\n          {date && <h2>{date}</h2>}\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{__html: html}}\n          />\n        </div>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: {path: {eq: $path}}) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"markdown-page-layout-module--page--14xv5\"};","import React from 'react';\nimport LocalizedLink from './LocalizedLink';\nimport styles from './breadCrumb.module.scss';\n\ninterface BreadCrumbProps {\n  readonly label: string;\n  readonly linkTo: string;\n}\n\nexport const BreadCrumb: React.SFC<BreadCrumbProps> = ({label, linkTo}) => (\n  <span className={styles.breadCrumb}>\n    <LocalizedLink to={linkTo}>{label}</LocalizedLink>\n    {' > '}\n  </span>\n);\n"],"sourceRoot":""}